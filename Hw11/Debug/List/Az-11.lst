
AVRASM ver. 2.1.30  D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm Sun May 22 20:35:07 2022

D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 003a
00002b 0020
00002c 002f      	.DB  0x3A,0x0,0x20,0x0,0x2F,0x0
                 _0x2000060:
D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm(1124): warning: .cseg .db misalignment - padding zero byte
00002d 0001      	.DB  0x1
                 _0x2000000:
00002e 4e2d
00002f 4e41
000030 4900
000031 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\E\uni\term8\AZ-Microp\HWs\Hw11\Debug\List\Az-11.asm(1127): warning: .cseg .db misalignment - padding zero byte
000032 0000      	.DB  0x0
                 _0x2040003:
000033 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000034 0001      	.DW  0x01
000035 0160      	.DW  __seed_G100
000036 005a      	.DW  _0x2000060*2
                 
000037 0002      	.DW  0x02
000038 0164      	.DW  __base_y_G102
000039 0066      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00003a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000042 e08d      	LDI  R24,(14-2)+1
000043 e0a2      	LDI  R26,2
000044 27bb      	CLR  R27
                 __CLEAR_REG:
000045 93ed      	ST   X+,R30
000046 958a      	DEC  R24
000047 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000048 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000049 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004b 93ed      	ST   X+,R30
00004c 9701      	SBIW R24,1
00004d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004e e6e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000050 9185      	LPM  R24,Z+
000051 9195      	LPM  R25,Z+
000052 9700      	SBIW R24,0
000053 f061      	BREQ __GLOBAL_INI_END
000054 91a5      	LPM  R26,Z+
000055 91b5      	LPM  R27,Z+
000056 9005      	LPM  R0,Z+
000057 9015      	LPM  R1,Z+
000058 01bf      	MOVW R22,R30
000059 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005a 9005      	LPM  R0,Z+
00005b 920d      	ST   X+,R0
00005c 9701      	SBIW R24,1
00005d f7e1      	BRNE __GLOBAL_INI_LOOP
00005e 01fb      	MOVW R30,R22
00005f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000060 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000061 bfed      	OUT  SPL,R30
000062 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000063 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000064 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000065 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000066 940c 0068 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ;  Yasmin madani
                 ;  97532265
                 ;*/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;
                 ;// I2C Bus functions
                 ;#include <i2c.h>
                 ;
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void) {
                 ; 0000 0015 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0016     // Declare your local variables here
                 ; 0000 0017     unsigned char h,m,s;
                 ; 0000 0018     unsigned char week_day, day, month, year;
                 ; 0000 0019     char *buffer;
                 ; 0000 001A     // Input/Output Ports initialization
                 ; 0000 001B     // Port A initialization
                 ; 0000 001C     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001D     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000068 9723      	SBIW R28,3
                 ;	h -> R17
                 ;	m -> R16
                 ;	s -> R19
                 ;	week_day -> R18
                 ;	day -> R21
                 ;	month -> R20
                 ;	year -> Y+2
                 ;	*buffer -> Y+0
000069 e0e0      	LDI  R30,LOW(0)
00006a bbea      	OUT  0x1A,R30
                 ; 0000 001E     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001F     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00006b bbeb      	OUT  0x1B,R30
                 ; 0000 0020 
                 ; 0000 0021     // Port B initialization
                 ; 0000 0022     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0023     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00006c bbe7      	OUT  0x17,R30
                 ; 0000 0024     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0025     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00006d bbe8      	OUT  0x18,R30
                 ; 0000 0026 
                 ; 0000 0027     // Port C initialization
                 ; 0000 0028     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0029     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00006e bbe4      	OUT  0x14,R30
                 ; 0000 002A     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002B     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00006f bbe5      	OUT  0x15,R30
                 ; 0000 002C 
                 ; 0000 002D     // Port D initialization
                 ; 0000 002E     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002F     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000070 bbe1      	OUT  0x11,R30
                 ; 0000 0030     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0031     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000071 bbe2      	OUT  0x12,R30
                 ; 0000 0032 
                 ; 0000 0033     // Timer/Counter 0 initialization
                 ; 0000 0034     // Clock source: System Clock
                 ; 0000 0035     // Clock value: Timer 0 Stopped
                 ; 0000 0036     // Mode: Normal top=0xFF
                 ; 0000 0037     // OC0 output: Disconnected
                 ; 0000 0038     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000072 bfe3      	OUT  0x33,R30
                 ; 0000 0039     TCNT0=0x00;
000073 bfe2      	OUT  0x32,R30
                 ; 0000 003A     OCR0=0x00;
000074 bfec      	OUT  0x3C,R30
                 ; 0000 003B 
                 ; 0000 003C     // Timer/Counter 1 initialization
                 ; 0000 003D     // Clock source: System Clock
                 ; 0000 003E     // Clock value: Timer1 Stopped
                 ; 0000 003F     // Mode: Normal top=0xFFFF
                 ; 0000 0040     // OC1A output: Disconnected
                 ; 0000 0041     // OC1B output: Disconnected
                 ; 0000 0042     // Noise Canceler: Off
                 ; 0000 0043     // Input Capture on Falling Edge
                 ; 0000 0044     // Timer1 Overflow Interrupt: Off
                 ; 0000 0045     // Input Capture Interrupt: Off
                 ; 0000 0046     // Compare A Match Interrupt: Off
                 ; 0000 0047     // Compare B Match Interrupt: Off
                 ; 0000 0048     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000075 bdef      	OUT  0x2F,R30
                 ; 0000 0049     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000076 bdee      	OUT  0x2E,R30
                 ; 0000 004A     TCNT1H=0x00;
000077 bded      	OUT  0x2D,R30
                 ; 0000 004B     TCNT1L=0x00;
000078 bdec      	OUT  0x2C,R30
                 ; 0000 004C     ICR1H=0x00;
000079 bde7      	OUT  0x27,R30
                 ; 0000 004D     ICR1L=0x00;
00007a bde6      	OUT  0x26,R30
                 ; 0000 004E     OCR1AH=0x00;
00007b bdeb      	OUT  0x2B,R30
                 ; 0000 004F     OCR1AL=0x00;
00007c bdea      	OUT  0x2A,R30
                 ; 0000 0050     OCR1BH=0x00;
00007d bde9      	OUT  0x29,R30
                 ; 0000 0051     OCR1BL=0x00;
00007e bde8      	OUT  0x28,R30
                 ; 0000 0052 
                 ; 0000 0053     // Timer/Counter 2 initialization
                 ; 0000 0054     // Clock source: System Clock
                 ; 0000 0055     // Clock value: Timer2 Stopped
                 ; 0000 0056     // Mode: Normal top=0xFF
                 ; 0000 0057     // OC2 output: Disconnected
                 ; 0000 0058     ASSR=0<<AS2;
00007f bde2      	OUT  0x22,R30
                 ; 0000 0059     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000080 bde5      	OUT  0x25,R30
                 ; 0000 005A     TCNT2=0x00;
000081 bde4      	OUT  0x24,R30
                 ; 0000 005B     OCR2=0x00;
000082 bde3      	OUT  0x23,R30
                 ; 0000 005C 
                 ; 0000 005D     // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 005E     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000083 bfe9      	OUT  0x39,R30
                 ; 0000 005F 
                 ; 0000 0060     // External Interrupt(s) initialization
                 ; 0000 0061     // INT0: Off
                 ; 0000 0062     // INT1: Off
                 ; 0000 0063     // INT2: Off
                 ; 0000 0064     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000084 bfe5      	OUT  0x35,R30
                 ; 0000 0065     MCUCSR=(0<<ISC2);
000085 bfe4      	OUT  0x34,R30
                 ; 0000 0066 
                 ; 0000 0067     // USART initialization
                 ; 0000 0068     // USART disabled
                 ; 0000 0069     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000086 b9ea      	OUT  0xA,R30
                 ; 0000 006A 
                 ; 0000 006B     // Analog Comparator initialization
                 ; 0000 006C     // Analog Comparator: Off
                 ; 0000 006D     // The Analog Comparator's positive input is
                 ; 0000 006E     // connected to the AIN0 pin
                 ; 0000 006F     // The Analog Comparator's negative input is
                 ; 0000 0070     // connected to the AIN1 pin
                 ; 0000 0071     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000087 e8e0      	LDI  R30,LOW(128)
000088 b9e8      	OUT  0x8,R30
                 ; 0000 0072     SFIOR=(0<<ACME);
000089 e0e0      	LDI  R30,LOW(0)
00008a bfe0      	OUT  0x30,R30
                 ; 0000 0073 
                 ; 0000 0074     // ADC initialization
                 ; 0000 0075     // ADC disabled
                 ; 0000 0076     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00008b b9e6      	OUT  0x6,R30
                 ; 0000 0077 
                 ; 0000 0078     // SPI initialization
                 ; 0000 0079     // SPI disabled
                 ; 0000 007A     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00008c b9ed      	OUT  0xD,R30
                 ; 0000 007B 
                 ; 0000 007C     // TWI initialization
                 ; 0000 007D     // TWI disabled
                 ; 0000 007E     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00008d bfe6      	OUT  0x36,R30
                 ; 0000 007F 
                 ; 0000 0080     // Bit-Banged I2C Bus initialization
                 ; 0000 0081     // I2C Port: PORTC
                 ; 0000 0082     // I2C SDA bit: 1
                 ; 0000 0083     // I2C SCL bit: 0
                 ; 0000 0084     // Bit Rate: 100 kHz
                 ; 0000 0085     // Note: I2C settings are specified in the
                 ; 0000 0086     // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 0087     i2c_init();
00008e 940e 0266 	CALL _i2c_init
                 ; 0000 0088 
                 ; 0000 0089     // DS1307 Real Time Clock initialization
                 ; 0000 008A     // Square wave output on pin SQW/OUT: Off
                 ; 0000 008B     // SQW/OUT pin state: 0
                 ; 0000 008C     rtc_init(0,0,0);
000090 e0e0      	LDI  R30,LOW(0)
000091 93ea      	ST   -Y,R30
000092 93ea      	ST   -Y,R30
000093 e0a0      	LDI  R26,LOW(0)
000094 940e 0122 	CALL _rtc_init
                 ; 0000 008D 
                 ; 0000 008E     // Alphanumeric LCD initialization
                 ; 0000 008F     // Connections are specified in the
                 ; 0000 0090     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0091     // RS - PORTA Bit 0
                 ; 0000 0092     // RD - PORTA Bit 1
                 ; 0000 0093     // EN - PORTA Bit 2
                 ; 0000 0094     // D4 - PORTA Bit 4
                 ; 0000 0095     // D5 - PORTA Bit 5
                 ; 0000 0096     // D6 - PORTA Bit 6
                 ; 0000 0097     // D7 - PORTA Bit 7
                 ; 0000 0098     // Characters/line: 20
                 ; 0000 0099     lcd_init(20);
000096 e1a4      	LDI  R26,LOW(20)
000097 940e 01df 	CALL _lcd_init
                 ; 0000 009A 
                 ; 0000 009B     while (1) {
                 _0x3:
                 ; 0000 009C         // Place your code here
                 ; 0000 009D         lcd_clear();
000099 940e 019c 	CALL _lcd_clear
                 ; 0000 009E         rtc_get_time(&h,&m,&s);
00009b b7ed      	IN   R30,SPL
00009c b7fe      	IN   R31,SPH
00009d 93fa      	ST   -Y,R31
00009e 93ea      	ST   -Y,R30
00009f 931f      	PUSH R17
0000a0 b7ed      	IN   R30,SPL
0000a1 b7fe      	IN   R31,SPH
0000a2 93fa      	ST   -Y,R31
0000a3 93ea      	ST   -Y,R30
0000a4 930f      	PUSH R16
0000a5 b7ad      	IN   R26,SPL
0000a6 b7be      	IN   R27,SPH
0000a7 933f      	PUSH R19
0000a8 940e 013b 	CALL _rtc_get_time
0000aa 913f      	POP  R19
0000ab 910f      	POP  R16
0000ac 911f      	POP  R17
                 ; 0000 009F         rtc_get_date(&week_day,&day,&month,&year);
0000ad b7ed      	IN   R30,SPL
0000ae b7fe      	IN   R31,SPH
0000af 93fa      	ST   -Y,R31
0000b0 93ea      	ST   -Y,R30
0000b1 932f      	PUSH R18
0000b2 b7ed      	IN   R30,SPL
0000b3 b7fe      	IN   R31,SPH
0000b4 93fa      	ST   -Y,R31
0000b5 93ea      	ST   -Y,R30
0000b6 935f      	PUSH R21
0000b7 b7ed      	IN   R30,SPL
0000b8 b7fe      	IN   R31,SPH
0000b9 93fa      	ST   -Y,R31
0000ba 93ea      	ST   -Y,R30
0000bb 934f      	PUSH R20
0000bc 01de      	MOVW R26,R28
0000bd 9618      	ADIW R26,8
0000be 940e 0154 	CALL _rtc_get_date
0000c0 914f      	POP  R20
0000c1 915f      	POP  R21
0000c2 912f      	POP  R18
                 ; 0000 00A0 
                 ; 0000 00A1         lcd_gotoxy(0,1);
0000c3 e0e0      	LDI  R30,LOW(0)
0000c4 93ea      	ST   -Y,R30
0000c5 e0a1      	LDI  R26,LOW(1)
0000c6 940e 018f 	CALL _lcd_gotoxy
                 ; 0000 00A2         itoa(h, buffer);
0000c8 2fe1      	MOV  R30,R17
0000c9 940e 021a 	CALL SUBOPT_0x0
                 ; 0000 00A3         lcd_puts(buffer);
                 ; 0000 00A4         lcd_putsf(":");
                 ; 0000 00A5 
                 ; 0000 00A6         itoa(m, buffer);
0000cb 2fe0      	MOV  R30,R16
0000cc 940e 021a 	CALL SUBOPT_0x0
                 ; 0000 00A7         lcd_puts(buffer);
                 ; 0000 00A8         lcd_putsf(":");
                 ; 0000 00A9 
                 ; 0000 00AA         itoa(s, buffer);
0000ce 2fe3      	MOV  R30,R19
0000cf 940e 0229 	CALL SUBOPT_0x1
                 ; 0000 00AB         lcd_puts(buffer);
                 ; 0000 00AC 
                 ; 0000 00AD         lcd_gotoxy(0,2);
0000d1 e0e0      	LDI  R30,LOW(0)
0000d2 93ea      	ST   -Y,R30
0000d3 e0a2      	LDI  R26,LOW(2)
0000d4 940e 018f 	CALL _lcd_gotoxy
                 ; 0000 00AE         itoa(week_day, buffer);
0000d6 2fe2      	MOV  R30,R18
0000d7 940e 0229 	CALL SUBOPT_0x1
                 ; 0000 00AF         lcd_puts(buffer);
                 ; 0000 00B0         lcd_putsf(" ");
                +
0000d9 e5a6     +LDI R26 , LOW ( 2 * _0x0 + ( 2 ) )
0000da e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW2FN _0x0,2
0000db 940e 01cc 	CALL _lcd_putsf
                 ; 0000 00B1 
                 ; 0000 00B2         itoa(day, buffer);
0000dd 2fe5      	MOV  R30,R21
0000de 940e 0229 	CALL SUBOPT_0x1
                 ; 0000 00B3         lcd_puts(buffer);
                 ; 0000 00B4         lcd_putsf("/");
                +
0000e0 e5a8     +LDI R26 , LOW ( 2 * _0x0 + ( 4 ) )
0000e1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW2FN _0x0,4
0000e2 940e 01cc 	CALL _lcd_putsf
                 ; 0000 00B5 
                 ; 0000 00B6         itoa(month, buffer);
0000e4 2fe4      	MOV  R30,R20
0000e5 940e 0229 	CALL SUBOPT_0x1
                 ; 0000 00B7         lcd_puts(buffer);
                 ; 0000 00B8         lcd_putsf("/");
                +
0000e7 e5a8     +LDI R26 , LOW ( 2 * _0x0 + ( 4 ) )
0000e8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW2FN _0x0,4
0000e9 940e 01cc 	CALL _lcd_putsf
                 ; 0000 00B9 
                 ; 0000 00BA         itoa(year, buffer);
0000eb 81ea      	LDD  R30,Y+2
0000ec 940e 0229 	CALL SUBOPT_0x1
                 ; 0000 00BB         lcd_puts(buffer);
                 ; 0000 00BC 
                 ; 0000 00BD         delay_ms(500);
0000ee efa4      	LDI  R26,LOW(500)
0000ef e0b1      	LDI  R27,HIGH(500)
0000f0 940e 02b7 	CALL _delay_ms
                 ; 0000 00BE     }
0000f2 cfa6      	RJMP _0x3
                 ; 0000 00BF }
                 _0x6:
0000f3 cfff      	RJMP _0x6
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0000f4 93ba      	ST   -Y,R27
0000f5 93aa      	ST   -Y,R26
0000f6 91a9          ld   r26,y+
0000f7 91b9          ld   r27,y+
0000f8 91e9          ld   r30,y+
0000f9 91f9          ld   r31,y+
0000fa 9630          adiw r30,0
0000fb f42a          brpl __itoa0
0000fc 95e0          com  r30
0000fd 95f0          com  r31
0000fe 9631          adiw r30,1
0000ff e26d          ldi  r22,'-'
000100 936d          st   x+,r22
                 __itoa0:
000101 94e8          clt
000102 e180          ldi  r24,low(10000)
000103 e297          ldi  r25,high(10000)
000104 d00d          rcall __itoa1
000105 ee88          ldi  r24,low(1000)
000106 e093          ldi  r25,high(1000)
000107 d00a          rcall __itoa1
000108 e684          ldi  r24,100
000109 2799          clr  r25
00010a d007          rcall __itoa1
00010b e08a          ldi  r24,10
00010c d005          rcall __itoa1
00010d 2f6e          mov  r22,r30
00010e d010          rcall __itoa5
00010f 2766          clr  r22
000110 936c          st   x,r22
000111 9508          ret
                 
                 __itoa1:
000112 2766          clr	 r22
                 __itoa2:
000113 17e8          cp   r30,r24
000114 07f9          cpc  r31,r25
000115 f020          brlo __itoa3
000116 9563          inc  r22
000117 1be8          sub  r30,r24
000118 0bf9          sbc  r31,r25
000119 f7c9          brne __itoa2
                 __itoa3:
00011a 2366          tst  r22
00011b f411          brne __itoa4
00011c f016          brts __itoa5
00011d 9508          ret
                 __itoa4:
00011e 9468          set
                 __itoa5:
00011f 5d60          subi r22,-0x30
000120 936d          st   x+,r22
000121 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
000122 93aa      	ST   -Y,R26
000123 81ea      	LDD  R30,Y+2
000124 70e3      	ANDI R30,LOW(0x3)
000125 83ea      	STD  Y+2,R30
000126 81e9      	LDD  R30,Y+1
000127 30e0      	CPI  R30,0
000128 f019      	BREQ _0x2020003
000129 81ea      	LDD  R30,Y+2
00012a 61e0      	ORI  R30,0x10
00012b 83ea      	STD  Y+2,R30
                 _0x2020003:
00012c 81e8      	LD   R30,Y
00012d 30e0      	CPI  R30,0
00012e f019      	BREQ _0x2020004
00012f 81ea      	LDD  R30,Y+2
000130 68e0      	ORI  R30,0x80
000131 83ea      	STD  Y+2,R30
                 _0x2020004:
000132 940e 0234 	CALL SUBOPT_0x2
000134 e0a7      	LDI  R26,LOW(7)
000135 940e 029f 	CALL _i2c_write
000137 81aa      	LDD  R26,Y+2
000138 940e 0239 	CALL SUBOPT_0x3
00013a c0a2      	RJMP _0x20E0003
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
00013b 93ba      	ST   -Y,R27
00013c 93aa      	ST   -Y,R26
00013d 940e 0234 	CALL SUBOPT_0x2
00013f e0a0      	LDI  R26,LOW(0)
000140 940e 0239 	CALL SUBOPT_0x3
000142 940e 023d 	CALL SUBOPT_0x4
000144 940e 0245 	CALL SUBOPT_0x5
000146 940e 024c 	CALL SUBOPT_0x6
000148 940e 0252 	CALL SUBOPT_0x7
00014a 2fae      	MOV  R26,R30
00014b 940e 020d 	CALL _bcd2bin
00014d 81ac      	LDD  R26,Y+4
00014e 81bd      	LDD  R27,Y+4+1
00014f 93ec      	ST   X,R30
000150 940e 027a 	CALL _i2c_stop
000152 9626      	ADIW R28,6
000153 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
000154 93ba      	ST   -Y,R27
000155 93aa      	ST   -Y,R26
000156 940e 0234 	CALL SUBOPT_0x2
000158 e0a3      	LDI  R26,LOW(3)
000159 940e 0239 	CALL SUBOPT_0x3
00015b 940e 023d 	CALL SUBOPT_0x4
00015d 81ae      	LDD  R26,Y+6
00015e 81bf      	LDD  R27,Y+6+1
00015f 93ec      	ST   X,R30
000160 940e 024c 	CALL SUBOPT_0x6
000162 81ac      	LDD  R26,Y+4
000163 81bd      	LDD  R27,Y+4+1
000164 93ec      	ST   X,R30
000165 940e 024c 	CALL SUBOPT_0x6
000167 940e 0252 	CALL SUBOPT_0x7
000169 940e 0245 	CALL SUBOPT_0x5
00016b 940e 027a 	CALL _i2c_stop
00016d 9628      	ADIW R28,8
00016e 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
00016f 93aa      	ST   -Y,R26
000170 b3eb      	IN   R30,0x1B
000171 70ef      	ANDI R30,LOW(0xF)
000172 2fae      	MOV  R26,R30
000173 81e8      	LD   R30,Y
000174 7fe0      	ANDI R30,LOW(0xF0)
000175 2bea      	OR   R30,R26
000176 bbeb      	OUT  0x1B,R30
                +
000177 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000178 958a     +DEC R24
000179 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017a 9ada      	SBI  0x1B,2
                +
00017b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00017c 958a     +DEC R24
00017d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017e 98da      	CBI  0x1B,2
                +
00017f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000180 958a     +DEC R24
000181 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000182 c088      	RJMP _0x20E0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000183 93aa      	ST   -Y,R26
000184 81a8      	LD   R26,Y
000185 dfe9      	RCALL __lcd_write_nibble_G102
000186 81e8          ld    r30,y
000187 95e2          swap  r30
000188 83e8          st    y,r30
000189 81a8      	LD   R26,Y
00018a dfe4      	RCALL __lcd_write_nibble_G102
                +
00018b e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00018c 958a     +DEC R24
00018d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00018e c07c      	RJMP _0x20E0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00018f 93aa      	ST   -Y,R26
000190 81e8      	LD   R30,Y
000191 e0f0      	LDI  R31,0
000192 59ec      	SUBI R30,LOW(-__base_y_G102)
000193 4ffe      	SBCI R31,HIGH(-__base_y_G102)
000194 81e0      	LD   R30,Z
000195 81a9      	LDD  R26,Y+1
000196 0fae      	ADD  R26,R30
000197 dfeb      	RCALL __lcd_write_data
000198 8059      	LDD  R5,Y+1
000199 8048      	LDD  R4,Y+0
00019a 9622      	ADIW R28,2
00019b 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00019c e0a2      	LDI  R26,LOW(2)
00019d 940e 0258 	CALL SUBOPT_0x8
00019f e0ac      	LDI  R26,LOW(12)
0001a0 dfe2      	RCALL __lcd_write_data
0001a1 e0a1      	LDI  R26,LOW(1)
0001a2 940e 0258 	CALL SUBOPT_0x8
0001a4 e0e0      	LDI  R30,LOW(0)
0001a5 2e4e      	MOV  R4,R30
0001a6 2e5e      	MOV  R5,R30
0001a7 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001a8 93aa      	ST   -Y,R26
0001a9 81a8      	LD   R26,Y
0001aa 30aa      	CPI  R26,LOW(0xA)
0001ab f011      	BREQ _0x2040005
0001ac 1457      	CP   R5,R7
0001ad f048      	BRLO _0x2040004
                 _0x2040005:
0001ae e0e0      	LDI  R30,LOW(0)
0001af 93ea      	ST   -Y,R30
0001b0 9443      	INC  R4
0001b1 2da4      	MOV  R26,R4
0001b2 dfdc      	RCALL _lcd_gotoxy
0001b3 81a8      	LD   R26,Y
0001b4 30aa      	CPI  R26,LOW(0xA)
0001b5 f409      	BRNE _0x2040007
0001b6 c054      	RJMP _0x20E0001
                 _0x2040007:
                 _0x2040004:
0001b7 9453      	INC  R5
0001b8 9ad8      	SBI  0x1B,0
0001b9 81a8      	LD   R26,Y
0001ba dfc8      	RCALL __lcd_write_data
0001bb 98d8      	CBI  0x1B,0
0001bc c04e      	RJMP _0x20E0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001bd 93ba      	ST   -Y,R27
0001be 93aa      	ST   -Y,R26
0001bf 931a      	ST   -Y,R17
                 _0x2040008:
0001c0 81a9      	LDD  R26,Y+1
0001c1 81ba      	LDD  R27,Y+1+1
0001c2 91ed      	LD   R30,X+
0001c3 83a9      	STD  Y+1,R26
0001c4 83ba      	STD  Y+1+1,R27
0001c5 2f1e      	MOV  R17,R30
0001c6 30e0      	CPI  R30,0
0001c7 f019      	BREQ _0x204000A
0001c8 2fa1      	MOV  R26,R17
0001c9 dfde      	RCALL _lcd_putchar
0001ca cff5      	RJMP _0x2040008
                 _0x204000A:
0001cb c010      	RJMP _0x20E0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001cc 93ba      	ST   -Y,R27
0001cd 93aa      	ST   -Y,R26
0001ce 931a      	ST   -Y,R17
                 _0x204000B:
0001cf 81e9      	LDD  R30,Y+1
0001d0 81fa      	LDD  R31,Y+1+1
0001d1 9631      	ADIW R30,1
0001d2 83e9      	STD  Y+1,R30
0001d3 83fa      	STD  Y+1+1,R31
0001d4 9731      	SBIW R30,1
0001d5 91e4      	LPM  R30,Z
0001d6 2f1e      	MOV  R17,R30
0001d7 30e0      	CPI  R30,0
0001d8 f019      	BREQ _0x204000D
0001d9 2fa1      	MOV  R26,R17
0001da dfcd      	RCALL _lcd_putchar
0001db cff3      	RJMP _0x204000B
                 _0x204000D:
                 _0x20E0002:
0001dc 8118      	LDD  R17,Y+0
                 _0x20E0003:
0001dd 9623      	ADIW R28,3
0001de 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001df 93aa      	ST   -Y,R26
0001e0 b3ea      	IN   R30,0x1A
0001e1 6fe0      	ORI  R30,LOW(0xF0)
0001e2 bbea      	OUT  0x1A,R30
0001e3 9ad2      	SBI  0x1A,2
0001e4 9ad0      	SBI  0x1A,0
0001e5 9ad1      	SBI  0x1A,1
0001e6 98da      	CBI  0x1B,2
0001e7 98d8      	CBI  0x1B,0
0001e8 98d9      	CBI  0x1B,1
0001e9 8078      	LDD  R7,Y+0
0001ea 81e8      	LD   R30,Y
0001eb 58e0      	SUBI R30,-LOW(128)
                +
0001ec 93e0 0166+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
0001ee 81e8      	LD   R30,Y
0001ef 54e0      	SUBI R30,-LOW(192)
                +
0001f0 93e0 0167+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
0001f2 e1a4      	LDI  R26,LOW(20)
0001f3 e0b0      	LDI  R27,0
0001f4 940e 02b7 	CALL _delay_ms
0001f6 940e 025e 	CALL SUBOPT_0x9
0001f8 940e 025e 	CALL SUBOPT_0x9
0001fa 940e 025e 	CALL SUBOPT_0x9
0001fc e2a0      	LDI  R26,LOW(32)
0001fd df71      	RCALL __lcd_write_nibble_G102
                +
0001fe ec88     +LDI R24 , LOW ( 200 )
0001ff e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000200 9701     +SBIW R24 , 1
000201 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000202 e2a8      	LDI  R26,LOW(40)
000203 df7f      	RCALL __lcd_write_data
000204 e0a4      	LDI  R26,LOW(4)
000205 df7d      	RCALL __lcd_write_data
000206 e8a5      	LDI  R26,LOW(133)
000207 df7b      	RCALL __lcd_write_data
000208 e0a6      	LDI  R26,LOW(6)
000209 df79      	RCALL __lcd_write_data
00020a df91      	RCALL _lcd_clear
                 _0x20E0001:
00020b 9621      	ADIW R28,1
00020c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
00020d 93aa      	ST   -Y,R26
00020e 81e8          ld   r30,y
00020f 95e2          swap r30
000210 70ef          andi r30,0xf
000211 2fae          mov  r26,r30
000212 0faa          lsl  r26
000213 0faa          lsl  r26
000214 0fea          add  r30,r26
000215 0fee          lsl  r30
000216 91a9          ld   r26,y+
000217 70af          andi r26,0xf
000218 0fea          add  r30,r26
000219 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __seed_G100:
000160           	.BYTE 0x4
                 __base_y_G102:
000164           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
00021a e0f0      	LDI  R31,0
00021b 93fa      	ST   -Y,R31
00021c 93ea      	ST   -Y,R30
00021d 81aa      	LDD  R26,Y+2
00021e 81bb      	LDD  R27,Y+2+1
00021f 940e 00f4 	CALL _itoa
000221 81a8      	LD   R26,Y
000222 81b9      	LDD  R27,Y+1
000223 940e 01bd 	CALL _lcd_puts
                +
000225 e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000226 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000227 940c 01cc 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1:
000229 e0f0      	LDI  R31,0
00022a 93fa      	ST   -Y,R31
00022b 93ea      	ST   -Y,R30
00022c 81aa      	LDD  R26,Y+2
00022d 81bb      	LDD  R27,Y+2+1
00022e 940e 00f4 	CALL _itoa
000230 81a8      	LD   R26,Y
000231 81b9      	LDD  R27,Y+1
000232 940c 01bd 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000234 940e 026b 	CALL _i2c_start
000236 eda0      	LDI  R26,LOW(208)
000237 940c 029f 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000239 940e 029f 	CALL _i2c_write
00023b 940c 027a 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00023d 940e 026b 	CALL _i2c_start
00023f eda1      	LDI  R26,LOW(209)
000240 940e 029f 	CALL _i2c_write
000242 e0a1      	LDI  R26,LOW(1)
000243 940c 0284 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000245 2fae      	MOV  R26,R30
000246 940e 020d 	CALL _bcd2bin
000248 81a8      	LD   R26,Y
000249 81b9      	LDD  R27,Y+1
00024a 93ec      	ST   X,R30
00024b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00024c e0a1      	LDI  R26,LOW(1)
00024d 940e 0284 	CALL _i2c_read
00024f 2fae      	MOV  R26,R30
000250 940c 020d 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000252 81aa      	LDD  R26,Y+2
000253 81bb      	LDD  R27,Y+2+1
000254 93ec      	ST   X,R30
000255 e0a0      	LDI  R26,LOW(0)
000256 940c 0284 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000258 940e 0183 	CALL __lcd_write_data
00025a e0a3      	LDI  R26,LOW(3)
00025b e0b0      	LDI  R27,0
00025c 940c 02b7 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
00025e e3a0      	LDI  R26,LOW(48)
00025f 940e 016f 	CALL __lcd_write_nibble_G102
                +
000261 ec88     +LDI R24 , LOW ( 200 )
000262 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000263 9701     +SBIW R24 , 1
000264 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000265 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
000266 98a8      	cbi  __i2c_port,__scl_bit
000267 98a9      	cbi  __i2c_port,__sda_bit
000268 9aa0      	sbi  __i2c_dir,__scl_bit
000269 98a1      	cbi  __i2c_dir,__sda_bit
00026a c015      	rjmp __i2c_delay2
                 _i2c_start:
00026b 98a1      	cbi  __i2c_dir,__sda_bit
00026c 98a0      	cbi  __i2c_dir,__scl_bit
00026d 27ee      	clr  r30
00026e 0000      	nop
00026f 9b99      	sbis __i2c_pin,__sda_bit
000270 9508      	ret
000271 9b98      	sbis __i2c_pin,__scl_bit
000272 9508      	ret
000273 d004      	rcall __i2c_delay1
000274 9aa1      	sbi  __i2c_dir,__sda_bit
000275 d002      	rcall __i2c_delay1
000276 9aa0      	sbi  __i2c_dir,__scl_bit
000277 e0e1      	ldi  r30,1
                 __i2c_delay1:
000278 e06d      	ldi  r22,13
000279 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00027a 9aa1      	sbi  __i2c_dir,__sda_bit
00027b 9aa0      	sbi  __i2c_dir,__scl_bit
00027c d003      	rcall __i2c_delay2
00027d 98a0      	cbi  __i2c_dir,__scl_bit
00027e dff9      	rcall __i2c_delay1
00027f 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
000280 e16b      	ldi  r22,27
                 __i2c_delay2l:
000281 956a      	dec  r22
000282 f7f1      	brne __i2c_delay2l
000283 9508      	ret
                 _i2c_read:
000284 e078      	ldi  r23,8
                 __i2c_read0:
000285 98a0      	cbi  __i2c_dir,__scl_bit
000286 dff1      	rcall __i2c_delay1
                 __i2c_read3:
000287 9b98      	sbis __i2c_pin,__scl_bit
000288 cffe      	rjmp __i2c_read3
000289 dfee      	rcall __i2c_delay1
00028a 9488      	clc
00028b 9999      	sbic __i2c_pin,__sda_bit
00028c 9408      	sec
00028d 9aa0      	sbi  __i2c_dir,__scl_bit
00028e dff1      	rcall __i2c_delay2
00028f 1fee      	rol  r30
000290 957a      	dec  r23
000291 f799      	brne __i2c_read0
000292 2f7a      	mov  r23,r26
000293 2377      	tst  r23
000294 f411      	brne __i2c_read1
000295 98a1      	cbi  __i2c_dir,__sda_bit
000296 c001      	rjmp __i2c_read2
                 __i2c_read1:
000297 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000298 dfdf      	rcall __i2c_delay1
000299 98a0      	cbi  __i2c_dir,__scl_bit
00029a dfe5      	rcall __i2c_delay2
00029b 9aa0      	sbi  __i2c_dir,__scl_bit
00029c dfdb      	rcall __i2c_delay1
00029d 98a1      	cbi  __i2c_dir,__sda_bit
00029e cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00029f e078      	ldi  r23,8
                 __i2c_write0:
0002a0 0faa      	lsl  r26
0002a1 f410      	brcc __i2c_write1
0002a2 98a1      	cbi  __i2c_dir,__sda_bit
0002a3 c001      	rjmp __i2c_write2
                 __i2c_write1:
0002a4 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0002a5 dfda      	rcall __i2c_delay2
0002a6 98a0      	cbi  __i2c_dir,__scl_bit
0002a7 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0002a8 9b98      	sbis __i2c_pin,__scl_bit
0002a9 cffe      	rjmp __i2c_write3
0002aa dfcd      	rcall __i2c_delay1
0002ab 9aa0      	sbi  __i2c_dir,__scl_bit
0002ac 957a      	dec  r23
0002ad f791      	brne __i2c_write0
0002ae 98a1      	cbi  __i2c_dir,__sda_bit
0002af dfc8      	rcall __i2c_delay1
0002b0 98a0      	cbi  __i2c_dir,__scl_bit
0002b1 dfce      	rcall __i2c_delay2
0002b2 e0e1      	ldi  r30,1
0002b3 9999      	sbic __i2c_pin,__sda_bit
0002b4 27ee      	clr  r30
0002b5 9aa0      	sbi  __i2c_dir,__scl_bit
0002b6 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0002b7 9610      	adiw r26,0
0002b8 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002b9 ed80     +LDI R24 , LOW ( 0x7D0 )
0002ba e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002bb 9701     +SBIW R24 , 1
0002bc f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002bd 95a8      	wdr
0002be 9711      	sbiw r26,1
0002bf f7c9      	brne __delay_ms0
                 __delay_ms1:
0002c0 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   3 r17:  10 r18:   3 r19:   3 r20:   3 r21:   3 r22:  15 r23:   6 
r24:  27 r25:  10 r26:  87 r27:  27 r28:   8 r29:   1 r30: 155 r31:  25 
x  :  12 y  :  96 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :  10 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  55 
cbi   :  20 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   2 cpc   :   1 cpi   :   6 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  14 inc   :   3 jmp   :  30 ld    :  22 ldd   :  30 ldi   :  81 
lds   :   0 lpm   :   9 lsl   :   4 lsr   :   0 mov   :  20 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   1 or    :   1 
ori   :   3 out   :  42 pop   :   6 push  :   6 rcall :  34 ret   :  16 
reti  :   0 rjmp  :  19 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  50 std   :   7 sts   :   2 sub   :   1 subi  :   4 swap  :   2 
tst   :   2 wdr   :   1 
Instructions used: 56 out of 116 (48.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000582   1376     34   1410   16384   8.6%
[.dseg] 0x000060 0x000168      0      8      8    1024   0.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
