;/*
;Yasmin Madani
;97532265
;*/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;
;signed char a = 0;
;int i = 1;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void) {
; 0000 000F interrupt [2] void ext_int0_isr(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0010     a+=i;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0011     delay_ms(10);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0012 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void) {
; 0000 0015 interrupt [3] void ext_int1_isr(void) {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0016     a-=i;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0017     delay_ms(10);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0018 }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void) {
; 0000 001B interrupt [4] void ext_int2_isr(void) {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001C 
; 0000 001D     PORTC.3=!PORTC.3;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001E 
; 0000 001F     if(i == 1)
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0020         i = 10;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0021     else
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0022         i = 1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0023 }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;// Declare your global variables here
;
;void main(void) {
; 0000 0027 void main(void) {
;PCODE: $0000003A VOL: 0
; 0000 0028     char *str;
; 0000 0029     PORTC=0x00;
;	*str -> R16,R17
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002A     DDRC=0xFF;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002B 
; 0000 002C     // External Interrupt(s) initialization
; 0000 002D     // INT0: On
; 0000 002E     // INT0 Mode: Falling Edge
; 0000 002F     // INT1: On
; 0000 0030     // INT1 Mode: Falling Edge
; 0000 0031     // INT2: On
; 0000 0032     // INT2 Mode: Falling Edge
; 0000 0033     GICR|=0xE0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0034     MCUCR=0x0A;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0035     MCUCSR=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0036     GIFR=0xE0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0037 
; 0000 0038     // Alphanumeric LCD initialization
; 0000 0039     // Connections are specified in the
; 0000 003A     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 003B     // RS - PORTC Bit 0
; 0000 003C     // RD - PORTC Bit 1
; 0000 003D     // EN - PORTC Bit 2
; 0000 003E     // D4 - PORTC Bit 4
; 0000 003F     // D5 - PORTC Bit 5
; 0000 0040     // D6 - PORTC Bit 6
; 0000 0041     // D7 - PORTC Bit 7
; 0000 0042     // Characters/line: 16
; 0000 0043 
; 0000 0044     lcd_init(16);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0045 
; 0000 0046     // Global enable interrupts
; 0000 0047     #asm("sei")
;PCODE: $0000004A VOL: 0
	sei
;PCODE: $0000004B VOL: 0
; 0000 0048 
; 0000 0049     while (1) {
;PCODE: $0000004C VOL: 0
; 0000 004A         lcd_gotoxy(0,0);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 004B         itoa(a,str);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 004C         lcd_puts(str);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 004D         lcd_putchar(' ');
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004E         lcd_putchar(' ');
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 004F         delay_ms(50);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0050     }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0051 }
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
