; /*
; Yasmin Madani
; 97532265
; */
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;    unsigned char CODE[]= {
;    0xFC,    //    0001        # # # # # # . .
;    0x92,    //    0002        # . . # . . # .
;    0x92,    //    0003        # . . # . . # .
;    0x92,    //    0004        # . . # . . # .
;    0xFC ,    //    0005        # # # # # # . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,    //    0001        # . . . . . . .
;    0x80,    //    0002        # . . . . . . .
;    0xFE,    //    0001        # # # # # # # .
;    0xC0,    //    0002        # # . . . . . .
;    0xC0,    //    0003        # # . . . . . .
;    0xC0,    //    0004        # # . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80,    //    0001        # . . . . . . .
;    0x80,    //    0002        # . . . . . . .
;    0xFE,    //    0003        # # # # # # # .
;    0x80 ,    //    0005        # . . . . . . .
;    0x80,     //    0005        # . . . . . . .
;    0x80, 	 //	0005		   # . . . . . . .
;    0x80,	//	0001		   # . . . . . . .
;	0x80,	//	0002		   # . . . . . . .
;    };

	.DSEG
;
;
;
;void main(){
; 0000 0026 void main(){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0027 
; 0000 0028 unsigned char PORT[16] = {1, 2, 4, 8, 16, 32, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0};
; 0000 0029 unsigned int s, col, timer;
; 0000 002A 
; 0000 002B unsigned char Col,Scan,Refresh,Index,S;
; 0000 002C DDRC=0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	PORT -> Y+5
;	s -> R16,R17
;	col -> R18,R19
;	timer -> R20,R21
;	Col -> Y+4
;	Scan -> Y+3
;	Refresh -> Y+2
;	Index -> Y+1
;	S -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002D DDRD=0xFF;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002E 
; 0000 002F while (1)
;PCODE: $00000017 VOL: 0
; 0000 0030       {
; 0000 0031       // Place your code here
; 0000 0032       for (S=0; S<10; S++)
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0033       {
; 0000 0034         for (Refresh=1; Refresh<11; Refresh++)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0035         {
; 0000 0036             Scan = 0b00000001;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0037             for (Col=0; Col<5; Col++)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0038             {
; 0000 0039                 Index = S + Col;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003A                 PORTD = CODE[Index];
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003B                 PORTC = Scan;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003C                 delay_ms(4);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003D                 Scan = Scan << 1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003E                 PORTC = 0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003F             }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0040         }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0041       }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0042       }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0043 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
