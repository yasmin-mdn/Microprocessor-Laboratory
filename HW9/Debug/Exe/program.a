;/*
;Yasmin Madani
;97532265
;*/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;// Declare your global variables here
;void usart_send_string(char *str);
;unsigned char i;
;int j;
;
;void main(void) {
; 0000 0013 void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0014     unsigned char a;
; 0000 0015 
; 0000 0016     // Input/Output Ports initialization
; 0000 0017     // Port A initialization
; 0000 0018     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0019     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;	a -> R17
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001A     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 001B     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001C 
; 0000 001D     // Port B initialization
; 0000 001E     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 001F     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0020     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0021     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0022 
; 0000 0023     // Port C initialization
; 0000 0024     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0025     DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0026     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0027     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0028 
; 0000 0029     // Port D initialization
; 0000 002A     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002B     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002C     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002D     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002E 
; 0000 002F     // USART initialization
; 0000 0030     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0031     // USART Receiver: On
; 0000 0032     // USART Transmitter: On
; 0000 0033     // USART Mode: Asynchronous
; 0000 0034     // USART Baud Rate: 9600
; 0000 0035     UCSRA=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0036     UCSRB=0x18;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0037     UCSRC=0x86;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0038     UBRRH=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0039     UBRRL=0x33;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 003A 
; 0000 003B     // Alphanumeric LCD initialization
; 0000 003C     // Connections are specified in the
; 0000 003D     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 003E     // RS - PORTC Bit 0
; 0000 003F     // RD - PORTC Bit 1
; 0000 0040     // EN - PORTC Bit 2
; 0000 0041     // D4 - PORTC Bit 4
; 0000 0042     // D5 - PORTC Bit 5
; 0000 0043     // D6 - PORTC Bit 6
; 0000 0044     // D7 - PORTC Bit 7
; 0000 0045     // Characters/line: 16
; 0000 0046 
; 0000 0047     lcd_init(16);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0048     lcd_clear();
;PCODE: $0000002A VOL: 0
; 0000 0049 
; 0000 004A     while(1) {
;PCODE: $0000002B VOL: 0
; 0000 004B         a = getchar();
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004C         lcd_putchar(a);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004D         putchar(a);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004E         if(a == 'C')
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 004F             lcd_clear();
;PCODE: $00000035 VOL: 0
; 0000 0050         else if(a == 'N') {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0051             putchar(0x0D);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0052             putchar(0x0A);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0053             usart_send_string("Yasmin Madani");
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0054             putchar(0x0D);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0055             putchar(0x0A);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0056         } else if(a == 'c') {
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0057             for(j =0; j < 24; j++) {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0058                 putchar(0x0D); //CR
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0059                 putchar(0x0A);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 005A             }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005B         } else if(a == 'M') {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 005C             lcd_clear();
;PCODE: $00000063 VOL: 0
; 0000 005D             lcd_puts("Yasmin Madani");
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 005E         }
; 0000 005F     }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0060 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0

	.DSEG
_0x9:
	.BYTE 0x1C
;
;void usart_send_string(char *str) {
; 0000 0062 void usart_send_string(char *str) {

	.CSEG
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0063     for(i=0;str[i];i++)
;PCODE: $00000072 VOL: 0
;	*str -> Y+0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0064         putchar(str[i]);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0065 }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
